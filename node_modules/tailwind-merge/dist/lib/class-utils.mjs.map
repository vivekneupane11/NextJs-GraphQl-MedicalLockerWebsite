{"version":3,"file":"class-utils.mjs","sources":["../../src/lib/class-utils.ts"],"sourcesContent":["import { ClassGroupId, Config, ClassGroup, ClassValidator, ThemeObject, ThemeGetter } from './types'\n\nexport interface ClassPartObject {\n    nextPart: Record<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: ClassGroupId\n}\n\ninterface ClassValidatorObject {\n    classGroupId: ClassGroupId\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport function createClassUtils(config: Config) {\n    const classMap = createClassMap(config)\n\n    function getClassGroupId(className: string) {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    function getConflictingClassGroupIds(classGroupId: ClassGroupId) {\n        return config.conflictingClassGroups[classGroupId] || []\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nfunction getGroupRecursive(\n    classParts: string[],\n    classPartObject: ClassPartObject\n): ClassGroupId | undefined {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart[currentClassPart]\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nfunction getGroupIdForArbitraryProperty(className: string) {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':')\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport function createClassMap(config: Config) {\n    const { theme, prefix } = config\n    const classMap: ClassPartObject = {\n        nextPart: {},\n        validators: [],\n    }\n\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\n        Object.entries(config.classGroups),\n        prefix\n    )\n\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\n    })\n\n    return classMap\n}\n\nfunction processClassesRecursively(\n    classGroup: ClassGroup,\n    classPartObject: ClassPartObject,\n    classGroupId: ClassGroupId,\n    theme: ThemeObject\n) {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme\n            )\n        })\n    })\n}\n\nfunction getPart(classPartObject: ClassPartObject, path: string) {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (currentClassPartObject.nextPart[pathPart] === undefined) {\n            currentClassPartObject.nextPart[pathPart] = {\n                nextPart: {},\n                validators: [],\n            }\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart[pathPart]!\n    })\n\n    return currentClassPartObject\n}\n\nfunction isThemeGetter(func: ClassValidator | ThemeGetter): func is ThemeGetter {\n    return (func as ThemeGetter).isThemeGetter\n}\n\nfunction getPrefixedClassGroupEntries(\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup]>,\n    prefix: string | undefined\n): Array<[classGroupId: string, classGroup: ClassGroup]> {\n    if (!prefix) {\n        return classGroupEntries\n    }\n\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\n            if (typeof classDefinition === 'string') {\n                return prefix + classDefinition\n            }\n\n            if (typeof classDefinition === 'object') {\n                return Object.fromEntries(\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value])\n                )\n            }\n\n            return classDefinition\n        })\n\n        return [classGroupId, prefixedClassGroup]\n    })\n}\n"],"names":["CLASS_PART_SEPARATOR","createClassUtils","config","classMap","createClassMap","getClassGroupId","className","classParts","split","length","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","conflictingClassGroups","classPartObject","currentClassPart","nextClassPartObject","nextPart","classGroupFromNextClassPart","slice","undefined","validators","classRest","join","find","validator","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","prefix","prefixedClassGroupEntries","getPrefixedClassGroupEntries","Object","entries","classGroups","forEach","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","key","path","currentClassPartObject","pathPart","func","classGroupEntries","map","prefixedClassGroup","fromEntries","value"],"mappings":"AAaA,IAAMA,oBAAoB,GAAG,GAA7B,CAAA;AAEM,SAAUC,gBAAV,CAA2BC,MAA3B,EAAyC;AAC3C,EAAA,IAAMC,QAAQ,GAAGC,cAAc,CAACF,MAAD,CAA/B,CAAA;;AAEA,EAASG,SAAAA,eAAT,CAAyBC,SAAzB,EAA0C;AACtC,IAAMC,IAAAA,UAAU,GAAGD,SAAS,CAACE,KAAV,CAAgBR,oBAAhB,CAAnB,CADsC;;AAItC,IAAA,IAAIO,UAAU,CAAC,CAAD,CAAV,KAAkB,EAAlB,IAAwBA,UAAU,CAACE,MAAX,KAAsB,CAAlD,EAAqD;AACjDF,MAAAA,UAAU,CAACG,KAAX,EAAA,CAAA;AACH,KAAA;;AAED,IAAOC,OAAAA,iBAAiB,CAACJ,UAAD,EAAaJ,QAAb,CAAjB,IAA2CS,8BAA8B,CAACN,SAAD,CAAhF,CAAA;AACH,GAAA;;AAED,EAASO,SAAAA,2BAAT,CAAqCC,YAArC,EAA+D;AAC3D,IAAA,OAAOZ,MAAM,CAACa,sBAAP,CAA8BD,YAA9B,KAA+C,EAAtD,CAAA;AACH,GAAA;;AAED,EAAO,OAAA;AACHT,IAAAA,eAAe,EAAfA,eADG;AAEHQ,IAAAA,2BAA2B,EAA3BA,2BAAAA;AAFG,GAAP,CAAA;AAIH,CAAA;;AAED,SAASF,iBAAT,CACIJ,UADJ,EAEIS,eAFJ,EAEoC;AAAA,EAAA,IAAA,qBAAA,CAAA;;AAEhC,EAAA,IAAIT,UAAU,CAACE,MAAX,KAAsB,CAA1B,EAA6B;AACzB,IAAOO,OAAAA,eAAe,CAACF,YAAvB,CAAA;AACH,GAAA;;AAED,EAAA,IAAMG,gBAAgB,GAAGV,UAAU,CAAC,CAAD,CAAnC,CAAA;AACA,EAAA,IAAMW,mBAAmB,GAAGF,eAAe,CAACG,QAAhB,CAAyBF,gBAAzB,CAA5B,CAAA;AACA,EAAA,IAAMG,2BAA2B,GAAGF,mBAAmB,GACjDP,iBAAiB,CAACJ,UAAU,CAACc,KAAX,CAAiB,CAAjB,CAAD,EAAsBH,mBAAtB,CADgC,GAEjDI,SAFN,CAAA;;AAIA,EAAA,IAAIF,2BAAJ,EAAiC;AAC7B,IAAA,OAAOA,2BAAP,CAAA;AACH,GAAA;;AAED,EAAA,IAAIJ,eAAe,CAACO,UAAhB,CAA2Bd,MAA3B,KAAsC,CAA1C,EAA6C;AACzC,IAAA,OAAOa,SAAP,CAAA;AACH,GAAA;;AAED,EAAA,IAAME,SAAS,GAAGjB,UAAU,CAACkB,IAAX,CAAgBzB,oBAAhB,CAAlB,CAAA;AAEA,EAAA,OAAA,CAAA,qBAAA,GAAOgB,eAAe,CAACO,UAAhB,CAA2BG,IAA3B,CAAgC,UAAA,IAAA,EAAA;AAAA,IAAGC,IAAAA,SAAH,QAAGA,SAAH,CAAA;AAAA,IAAmBA,OAAAA,SAAS,CAACH,SAAD,CAA5B,CAAA;AAAA,GAAhC,CAAP,KAAO,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAA0EV,YAAjF,CAAA;AACH,CAAA;;AAED,IAAMc,sBAAsB,GAAG,YAA/B,CAAA;;AAEA,SAAShB,8BAAT,CAAwCN,SAAxC,EAAyD;AACrD,EAAA,IAAIsB,sBAAsB,CAACC,IAAvB,CAA4BvB,SAA5B,CAAJ,EAA4C;AACxC,IAAMwB,IAAAA,0BAA0B,GAAGF,sBAAsB,CAACG,IAAvB,CAA4BzB,SAA5B,CAAwC,CAAA,CAAxC,CAAnC,CAAA;AACA,IAAA,IAAM0B,QAAQ,GAAGF,0BAAH,IAAGA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,0BAA0B,CAAEG,SAA5B,CACb,CADa,EAEbH,0BAA0B,CAACI,OAA3B,CAAmC,GAAnC,CAFa,CAAjB,CAAA;;AAKA,IAAA,IAAIF,QAAJ,EAAc;AACV;AACA,MAAA,OAAO,gBAAgBA,QAAvB,CAAA;AACH,KAAA;AACJ,GAAA;AACJ,CAAA;AAED;;AAEG;;;AACG,SAAU5B,cAAV,CAAyBF,MAAzB,EAAuC;AACzC,EAAA,IAAQiC,KAAR,GAA0BjC,MAA1B,CAAQiC,KAAR;AAAA,MAAeC,MAAf,GAA0BlC,MAA1B,CAAekC,MAAf,CAAA;AACA,EAAA,IAAMjC,QAAQ,GAAoB;AAC9BgB,IAAAA,QAAQ,EAAE,EADoB;AAE9BI,IAAAA,UAAU,EAAE,EAAA;AAFkB,GAAlC,CAAA;AAKA,EAAA,IAAMc,yBAAyB,GAAGC,4BAA4B,CAC1DC,MAAM,CAACC,OAAP,CAAetC,MAAM,CAACuC,WAAtB,CAD0D,EAE1DL,MAF0D,CAA9D,CAAA;AAKAC,EAAAA,yBAAyB,CAACK,OAA1B,CAAkC,UAA+B,KAAA,EAAA;AAAA,IAAA,IAA7B5B,YAA6B,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,QAAf6B,UAAe,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAC7DC,IAAAA,yBAAyB,CAACD,UAAD,EAAaxC,QAAb,EAAuBW,YAAvB,EAAqCqB,KAArC,CAAzB,CAAA;AACH,GAFD,CAAA,CAAA;AAIA,EAAA,OAAOhC,QAAP,CAAA;AACH,CAAA;;AAED,SAASyC,yBAAT,CACID,UADJ,EAEI3B,eAFJ,EAGIF,YAHJ,EAIIqB,KAJJ,EAIsB;AAElBQ,EAAAA,UAAU,CAACD,OAAX,CAAmB,UAACG,eAAD,EAAoB;AACnC,IAAA,IAAI,OAAOA,eAAP,KAA2B,QAA/B,EAAyC;AACrC,MAAA,IAAMC,qBAAqB,GACvBD,eAAe,KAAK,EAApB,GAAyB7B,eAAzB,GAA2C+B,OAAO,CAAC/B,eAAD,EAAkB6B,eAAlB,CADtD,CAAA;AAEAC,MAAAA,qBAAqB,CAAChC,YAAtB,GAAqCA,YAArC,CAAA;AACA,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,IAAI,OAAO+B,eAAP,KAA2B,UAA/B,EAA2C;AACvC,MAAA,IAAIG,aAAa,CAACH,eAAD,CAAjB,EAAoC;AAChCD,QAAAA,yBAAyB,CACrBC,eAAe,CAACV,KAAD,CADM,EAErBnB,eAFqB,EAGrBF,YAHqB,EAIrBqB,KAJqB,CAAzB,CAAA;AAMA,QAAA,OAAA;AACH,OAAA;;AAEDnB,MAAAA,eAAe,CAACO,UAAhB,CAA2B0B,IAA3B,CAAgC;AAC5BtB,QAAAA,SAAS,EAAEkB,eADiB;AAE5B/B,QAAAA,YAAY,EAAZA,YAAAA;AAF4B,OAAhC,CAAA,CAAA;AAKA,MAAA,OAAA;AACH,KAAA;;AAEDyB,IAAAA,MAAM,CAACC,OAAP,CAAeK,eAAf,CAAgCH,CAAAA,OAAhC,CAAwC,UAAsB,KAAA,EAAA;AAAA,MAAA,IAApBQ,GAAoB,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,UAAfP,UAAe,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAC1DC,MAAAA,yBAAyB,CACrBD,UADqB,EAErBI,OAAO,CAAC/B,eAAD,EAAkBkC,GAAlB,CAFc,EAGrBpC,YAHqB,EAIrBqB,KAJqB,CAAzB,CAAA;AAMH,KAPD,CAAA,CAAA;AAQH,GAnCD,CAAA,CAAA;AAoCH,CAAA;;AAED,SAASY,OAAT,CAAiB/B,eAAjB,EAAmDmC,IAAnD,EAA+D;AAC3D,EAAIC,IAAAA,sBAAsB,GAAGpC,eAA7B,CAAA;AAEAmC,EAAAA,IAAI,CAAC3C,KAAL,CAAWR,oBAAX,EAAiC0C,OAAjC,CAAyC,UAACW,QAAD,EAAa;AAClD,IAAA,IAAID,sBAAsB,CAACjC,QAAvB,CAAgCkC,QAAhC,CAAA,KAA8C/B,SAAlD,EAA6D;AACzD8B,MAAAA,sBAAsB,CAACjC,QAAvB,CAAgCkC,QAAhC,CAA4C,GAAA;AACxClC,QAAAA,QAAQ,EAAE,EAD8B;AAExCI,QAAAA,UAAU,EAAE,EAAA;AAF4B,OAA5C,CAAA;AAIH,KAAA;;AAED6B,IAAAA,sBAAsB,GAAGA,sBAAsB,CAACjC,QAAvB,CAAgCkC,QAAhC,CAAzB,CAAA;AACH,GATD,CAAA,CAAA;AAWA,EAAA,OAAOD,sBAAP,CAAA;AACH,CAAA;;AAED,SAASJ,aAAT,CAAuBM,IAAvB,EAAyD;AACrD,EAAQA,OAAAA,IAAoB,CAACN,aAA7B,CAAA;AACH,CAAA;;AAED,SAASV,4BAAT,CACIiB,iBADJ,EAEInB,MAFJ,EAE8B;AAE1B,EAAI,IAAA,CAACA,MAAL,EAAa;AACT,IAAA,OAAOmB,iBAAP,CAAA;AACH,GAAA;;AAED,EAAA,OAAOA,iBAAiB,CAACC,GAAlB,CAAsB,UAA+B,KAAA,EAAA;AAAA,IAAA,IAA7B1C,YAA6B,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,QAAf6B,UAAe,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACxD,IAAMc,IAAAA,kBAAkB,GAAGd,UAAU,CAACa,GAAX,CAAe,UAACX,eAAD,EAAoB;AAC1D,MAAA,IAAI,OAAOA,eAAP,KAA2B,QAA/B,EAAyC;AACrC,QAAOT,OAAAA,MAAM,GAAGS,eAAhB,CAAA;AACH,OAAA;;AAED,MAAA,IAAI,OAAOA,eAAP,KAA2B,QAA/B,EAAyC;AACrC,QAAON,OAAAA,MAAM,CAACmB,WAAP,CACHnB,MAAM,CAACC,OAAP,CAAeK,eAAf,CAAgCW,CAAAA,GAAhC,CAAoC,UAAA,KAAA,EAAA;AAAA,UAAA,IAAEN,GAAF,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,cAAOS,KAAP,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAAA,UAAA,OAAkB,CAACvB,MAAM,GAAGc,GAAV,EAAeS,KAAf,CAAlB,CAAA;AAAA,SAApC,CADG,CAAP,CAAA;AAGH,OAAA;;AAED,MAAA,OAAOd,eAAP,CAAA;AACH,KAZ0B,CAA3B,CAAA;AAcA,IAAA,OAAO,CAAC/B,YAAD,EAAe2C,kBAAf,CAAP,CAAA;AACH,GAhBM,CAAP,CAAA;AAiBH;;;;"}